swagger: "2.0"
info:
  version: "0.0.1"
  title: ToDo API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /:
    get:
      description: "Returns all todos availiable in the database"
      operationId: "GetAllTodos"
      parameters: []
      responses:
        200:
          description: "An array of todos"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Todo"
      x-swagger-router-controller:
        "GetAllTodos"
    post:
      description: "Add new todo"
      operationId: "AddTodo"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "todo"
        description: "The todo to be added"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        200:
          description: "Successfull todo add"
      x-swagger-router-controller: "AddTodo"
  /todo/{id}:
    get:
      description: "Retrive single todo by id"
      operationId: "FindTodoById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of todo"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Todo response"
          schema:
            $ref: "#/definitions/Todo"
      x-swagger-router-controller: "FindTodoById"
    delete:
      description: "Delete a todo by id"
      operationId: "DeleteTodoById"
      parameters:
      - name: "id"
        in: "path"
        description: "Todo Id"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Todo deleted"
      x-swagger-router-controller: "DeleteTodoById"
    put:
      description: "Update todo by id"
      operationId: "UpdateTodoById"
      parameters:
      - name: "id"
        in: "path"
        description: "Todo Id"
        required: true
        type: "integer"
        format: "int64"
      - name: "updated_todo"
        in: "body"
        description: "the updated todo"
        required: true
        schema:
          $ref: "#/definitions/Todo"
      responses:
        200:
          description: "Todo Updated"
        400:
          description: "Fail updating todo"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Todo:
    type: "object"
    properties:
      todo_id:
        type: "integer"
        description: "Id for the todo"
      todo:
        type: "string"
        description: "The todo item"
      datecreated:
        type: "string"
        format: "date-time"
        description: "Time when todo was created"
      author:
        type: "string"
        description: "Creator of todo"
      duedate:
        type: "string"
        format: "date-time"
        description: "Time when todo should be created"
      completed:
        type: "boolean"
        description: "Indicates if the todo was completed"

